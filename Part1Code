library(dplyr)
library(magrittr)
library(readr)
library(DHARMa)
library(AER)
library(rstudioapi)


q1data <- read_csv("C:/Users/schac/Downloads/healthcare.csv")
q1data

#Adding log(income) to our dataset using cbind
log_income <- c(log(q1data$income))
q1data <- cbind(q1data,log_income)

#Plotting 3 histograms from the data using tee pipe function
q1data %T>%
  with(hist(Y)) %T>%
  with(hist(income)) %T>%
  with(hist(log_income))


## Poisson
m1 <- glm(Y ~ log_income, family = poisson(link = "log"), data = q1data)
summary(m1)

sim_res <- simulateResiduals(m1, refit=TRUE) 
testDispersion(sim_res, plot = FALSE)


b <- summary(m1)$coefficients[2,1]
se <- summary(m1)$coefficients[2,2]
z <- abs((b-0.5)/se)
p <- 2*pnorm(z, lower.tail = F)
p <- ifelse(p < 0.001, "<0.001", p)

res = cbind.data.frame(B0 = 0.5, B=b, S.E.=se, "z value" = z,  "p value" = p)


## Gamma
m2 <- glm(Y ~ log_income, family = Gamma(link = "log"), data = q1data)
summary(m2)

sim_res <- simulateResiduals(m2, refit=TRUE) 
testDispersion(sim_res, plot = FALSE)


b <- summary(m2)$coefficients[2,1]
se <- summary(m2)$coefficients[2,2]
z <- abs((b-0.5)/se)
p <- 2*pnorm(z, lower.tail = F)
p <- ifelse(p < 0.001, "<0.001", p)

res = cbind.data.frame(B0 = 0.5, B=b, S.E.=se, "z value" = z,  "p value" = p)



## Inverse Gaussian
m3 <- glm(Y ~ log_income, family = inverse.gaussian(link = "log"), data = q1data)
summary(m3)

sim_res <- simulateResiduals(m3, refit=TRUE) 
testDispersion(sim_res, plot = FALSE)

plot(m3, which=c(1,3))

b <- summary(m3)$coefficients[2,1]
se <- summary(m3)$coefficients[2,2]
z <- abs((b-0.5)/se)
p <- 2*pnorm(z, lower.tail = F)
p <- ifelse(p < 0.001, "<0.001", p)
res = cbind.data.frame(B0 = 0.5, B=b, S.E.=se, "z value" = z,  "p value" = p)

leverages <- hatvalues(m3)
p <- length(coefficients(m3))
n <- length(fitted(m3))
cutoffLev <-3*(p/n)
infLev <- as.data.frame(leverages[leverages > cutoffLev])

highleverage <- function(fit) {
  p <- length(coefficients(fit))
  n <- length(fitted(fit))
  ratio <-p/n
  plot(hatvalues(m3), main="Leverages")
  abline(h=3*ratio, col="red", lty=2, lwd=3)
}
highleverage(m3)


cooksd <- cooks.distance(m3)
n = nrow(q1data)

cutoffCook <- 4/n
plot(m3, which=4, cook.levels=cutoffCook)
abline(h=cutoffCook, lty=2, col="red", lwd=2)
infCook <- as.data.frame(cooksd[cooksd > 4/n])

levObser <- q1data[rownames(q1data) %in% rownames(infLev),]
cookObser <- q1data[rownames(q1data) %in% rownames(infCook),]
plot(q1data$log_income, q1data$Y, xlab = "log(income)", ylab = "Y")
points(levObser$log_income, levObser$Y, col="red")
points(cookObser$log_income, cookObser$Y, col="blue")
